#!/bin/bash
#
# Program:  Alder (CLSA Medical Image Quality Assessment Tool)
# Module:   init_config 
# Language: bash
#
# Author: Patrick Emond <emondpd AT mcmaster DOT ca>
# Author: Dean Inglis <inglisd AT mcmaster DOT ca>
# 
# A script used to create an alder config file and create the initial database, if necessary.
# The script prompts the user for each parameter and builds (overrites) the config file from these
# responses.
#
###################################################################################################

# get the directory the script is in (to find the config template file)
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# prompts the user for a value
# arg1: what text to display
# arg2: the variable name to write the response to
# arg3: the default value (optional)
function prompt()
{
  local __result=$2

  local value=""
  display="$1 "
  if [ $# -gt 2 ]; then
    value=$3
    display="$1 ($3) "
  fi
  
  read -p "$display" answer
  [ -n "$answer" ] && value=$answer
  eval $__result="'$value'"
}

# make sure an output config file name was provided
if [ $# -ne 1 ]; then
  echo "usage: $0 output_file.xml"
  exit 1;
fi

config_filename=$1

# get new config file parameters
prompt "Database hostname?" db_host "localhost"
prompt "Database port?" db_port "3306"
prompt "Database username?" db_username "alder"
prompt "Database password? " db_password
prompt "Database name?" db_name "alder"
prompt "Opal hostname?" opal_host "localhost"
prompt "Opal port?" opal_port "8843"
prompt "Opal username?" opal_username "administrator"
prompt "Opal password? " opal_password
prompt "Opal timeout?" opal_timeout "10"
prompt "Log file path?" log_path "/var/local/alder/log"
prompt "Image data path?" imagedata_path "/var/local/alder/data"

echo "Writing config file to $config_filename..."
sed -e "s;%DB_HOST%;$db_host;" \
    -e "s;%DB_PORT%;$db_port;" \
    -e "s;%DB_USERNAME%;$db_username;" \
    -e "s;%DB_PASSWORD%;$db_password;" \
    -e "s;%DB_NAME%;$db_name;" \
    -e "s;%OPAL_HOST%;$opal_host;" \
    -e "s;%OPAL_PORT%;$opal_port;" \
    -e "s;%OPAL_USERNAME%;$opal_username;" \
    -e "s;%OPAL_PASSWORD%;$opal_password;" \
    -e "s;%OPAL_TIMEOUT%;$opal_timeout;" \
    -e "s;%LOG_PATH%;$log_path;" \
    -e "s;%IMAGEDATA_PATH%;$imagedata_path;" $DIR/config.xml > $config_filename
echo

# see if we need to rebuild the database
rebuild_database=0
while true
do
  read -n 1 -p "Rebuild database? (y/n) " answer
  echo

  case $answer in
    [yY]* ) rebuild_database=1
            break;;
    [nN]* ) rebuild_database=0
            break;;
    * ) echo "Invalid response, please select y or n";;
  esac
done

# double check that we wish to rebuild the database
if [ $rebuild_database -eq 1 ]; then
  while true
  do
    read -n 1 -p "Rebuilding database, this will delete all existing data. Are you sure? (y/n) " answer
    echo

    case $answer in
      [yY]* ) rebuild_database=1
              break;;
      [nN]* ) rebuild_database=0
              break;;
      * ) echo "Invalid response, please select y or n";;
    esac
  done
fi

if [ $rebuild_database -eq 1 ]; then
  echo "Rebuilding the database..."
  sed -e "s;\`Alder\`;\`$db_name\`;" $DIR/../sql/schema.sql $DIR/../sql/Modality.sql |
  mysql --host="$db_host" --port=$db_port --user="$db_username" --password="$db_password"

  echo "Deleting old cached image files..."
  rm -rf $imagedata_path/*
  
  echo ""
fi
